/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package nhom50.CLIENT.GUI.custom;

import nhom50.CLIENT.GUI.screens.Read2;
import nhom50.DTO.Email;

import java.awt.*;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.text.SimpleDateFormat;

/**
 * @author khuong
 */
public class ItemMail extends javax.swing.JPanel {

    private Email email;
    private SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");

    public ItemMail() {
    }

    public ItemMail(Email email) {
        this.setMaximumSize(new Dimension(
                Integer.MAX_VALUE,
                82
        ));

        this.email = email;

        initComponents();

        updateView();

        this.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        this.addMouseListener(new MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                System.out.println(email.toString());
                new Read2(email).setVisible(true);
            }

            @Override
            public void mousePressed(MouseEvent e) {

            }

            @Override
            public void mouseReleased(MouseEvent e) {

            }

            @Override
            public void mouseEntered(MouseEvent e) {
                setHovered();
            }

            @Override
            public void mouseExited(MouseEvent e) {
                setExited();
            }
        });

        txtSender.setPreferredSize(new Dimension(
                Integer.MAX_VALUE,
                35
        ));
    }

    private void setExited() {
        if (email.getStatus().equals(Email.STATUS_SENT)) {
            this.setBackground(new Color(238, 238, 238));
        } else if (email.getStatus().equals(Email.STATUS_READ)) {
            this.setBackground(Color.WHITE);
        }
    }

    private void setHovered() {
        this.setBackground(new Color(220, 220, 220));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtTitle = new javax.swing.JLabel();
        txtSender = new javax.swing.JLabel();
        txtContent = new javax.swing.JLabel();
        txtDate = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        setPreferredSize(new java.awt.Dimension(830, 100));

        txtTitle.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        txtTitle.setText("Nhắc gia hạn dịch vụ Hosting miễn phí #132151 ");

        txtSender.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        txtSender.setText("123HOST.VN");

        txtContent.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        txtContent.setText("Chào bạn,  Dịch vụ Hosting miễn phí bạn đang sử dụng tại 123HOST đã đến thời điểm gia hạn. Thông tin dịch vụ:");

        txtDate.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        txtDate.setText("11/11/2022");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(txtSender, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtDate))
                        .addComponent(txtContent, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 804, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSender)
                    .addComponent(txtDate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtContent)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel txtContent;
    private javax.swing.JLabel txtDate;
    private javax.swing.JLabel txtSender;
    private javax.swing.JLabel txtTitle;
    // End of variables declaration//GEN-END:variables

    private void updateView() {
        txtSender.setText(email.getSenderName());
        txtSender.setFont(new Font("Arial", Font.BOLD, 17));
        txtTitle.setText(email.getSubject());
        txtContent.setText(email.getContent());
        txtDate.setText(sdf.format(email.getCreatedAt()) + "  ");
        setExited();
    }
}
